/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormulariosBibliotecario;
// Importamos el paquete de las herraminetas generales
import HerraminetasGenerales.*;
// Insetamos el paquete Clases bibliotecario para direccionar a los diferentes Form
import ClasesDeBibliotecario.*;
// Importa el paquete de la base de datos para ser utilizado en el proyecto
import ConexionBDD.*;
// Importacines que se trabajara en el proyecto de la bdd
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
//Importamos  el paquete  clases de Bibliotecario
import ClasesDeBibliotecario.*;



//

/**
 *
 * @author Daniel_M치rquez
 */
public class FormSolicitudes extends javax.swing.JFrame {
    // Creamos una instancia de la clases de herramientas generales
    HerraminetasGenerlasApp HerrApp = new HerraminetasGenerlasApp();
     // Instacia para regresar Login 
    ClassRegresoLogin RegresarLogion = new ClassRegresoLogin();
      // Instanciamos la clases dirigir Form 
    classDirgirFormBibli Direccionar = new  classDirgirFormBibli();
    
    // Instanciamos el calendario
    Calendar calendario = new GregorianCalendar();
    
     // Conexi칩n de la base de datos
     conexionSQL cc = new conexionSQL();
       Connection con=cc.conexion();
       
    /**
     * Creates new form FormSolicitudes
     */
    public FormSolicitudes() {
        initComponents();
        HerrApp.IconoBibli(txtIconoBibli);
        HerrApp.ColorMenu(jpMenu);
        HerrApp.ColorBotones(btnPrestamos, btnRegistrar, btnDevolucion);
        HerrApp.ColorBotones(btnSolicitudes,BtnPagos, BtnPagos);
        HerrApp.IconoSalida(txtSalidad);
        HerrApp.ColorFondo(jpFondo);
        //Cargamos los datos de los libros
        MostrarDatosLibro();
        //Cargamos los datos de solicitudes
        MostrarDatos();
        // Cargamos los datos de los usuarios
        MostrarDatosUser();
        //Mostramos los datos del combobox
        llenarSolicitudCombox();
        // Bloqueamos  la caja de texto del IDReserva 
        txtIDReserva.setEnabled(false);
        txtIDUser.setEnabled(false);// Bloqueamos la caja de texto del usuario
        txtLibroPrestar.setEnabled(false); // Bloqueamos la caja de texto del libro a prestar
        txtCantidadLibro.setEnabled(false); // Bloqueamos la caja de cantidad
        
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMenu = new javax.swing.JPanel();
        txtIconoBibli = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        btnPrestamos = new javax.swing.JButton();
        btnDevolucion = new javax.swing.JButton();
        BtnPagos = new javax.swing.JButton();
        btnSolicitudes = new javax.swing.JButton();
        txtSalidad = new javax.swing.JLabel();
        jpFondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbxEstado = new javax.swing.JComboBox<>();
        btnCambiarEstadoSolicitud = new javax.swing.JButton();
        txtIDReserva = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbxEstadoLibro = new javax.swing.JComboBox<>();
        txtLibroPrestar = new javax.swing.JTextField();
        txtIDUser = new javax.swing.JTextField();
        btnRegistrarReserva = new javax.swing.JButton();
        btnEliminarSolicitud = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSolicitudes = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtBuscadorUser = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtBuscadorSolicitud = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblLibro = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        txtBuscadorLibro = new javax.swing.JTextField();
        txtCantidadLibro = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtIconoBibli.setText("ICONO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Solicitudes");

        btnRegistrar.setText("Registrar Libro");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnPrestamos.setText("Registro Prestamos");
        btnPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestamosActionPerformed(evt);
            }
        });

        btnDevolucion.setText("Devoluci칩n Libro");
        btnDevolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolucionActionPerformed(evt);
            }
        });

        BtnPagos.setText("Registraci칩n Multa o Pago");
        BtnPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPagosActionPerformed(evt);
            }
        });

        btnSolicitudes.setText("Solicitudes Reservas");
        btnSolicitudes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitudesActionPerformed(evt);
            }
        });

        txtSalidad.setText("Salidad");
        txtSalidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSalidadMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpMenuLayout = new javax.swing.GroupLayout(jpMenu);
        jpMenu.setLayout(jpMenuLayout);
        jpMenuLayout.setHorizontalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPrestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDevolucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSolicitudes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtnPagos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(txtSalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(txtIconoBibli, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabel2)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jpMenuLayout.setVerticalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(txtIconoBibli, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrestamos)
                .addGap(4, 4, 4)
                .addComponent(btnDevolucion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSolicitudes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnPagos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 206, Short.MAX_VALUE)
                .addComponent(txtSalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jpFondo.setForeground(new java.awt.Color(255, 255, 255));

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Solicitudes de reservaci칩n de libros:");

        jLabel7.setText("N춿 Registro");

        jLabel8.setText("Estado Solicitado");

        btnCambiarEstadoSolicitud.setText("Enviar Datos");
        btnCambiarEstadoSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarEstadoSolicitudActionPerformed(evt);
            }
        });

        txtIDReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDReservaActionPerformed(evt);
            }
        });

        jLabel4.setText("N춿 Usuario");

        jLabel5.setText("N춿 Libro");

        jLabel9.setText("Estado Libro:");

        cbxEstadoLibro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reservado" }));

        btnRegistrarReserva.setText("Registrar");
        btnRegistrarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarReservaActionPerformed(evt);
            }
        });

        btnEliminarSolicitud.setText("Borrar Registros Solicitud");
        btnEliminarSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarSolicitudActionPerformed(evt);
            }
        });

        tblSolicitudes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSolicitudes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSolicitudesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSolicitudes);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Verificar Usuario:");

        jLabel13.setText("Buscador:");

        txtBuscadorUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorUserKeyReleased(evt);
            }
        });

        jLabel14.setText("Buscador:");

        txtBuscadorSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscadorSolicitudActionPerformed(evt);
            }
        });
        txtBuscadorSolicitud.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorSolicitudKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Buscar Libro:");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Registrar Reserva del Usuario:");

        tblLibro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLibro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLibroMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblLibro);

        jLabel15.setText("Buscador:");

        txtBuscadorLibro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorLibroKeyReleased(evt);
            }
        });

        jLabel16.setText("Cantidad Libro:");

        javax.swing.GroupLayout jpFondoLayout = new javax.swing.GroupLayout(jpFondo);
        jpFondo.setLayout(jpFondoLayout);
        jpFondoLayout.setHorizontalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBuscadorSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCambiarEstadoSolicitud)
                                    .addComponent(btnEliminarSolicitud)
                                    .addGroup(jpFondoLayout.createSequentialGroup()
                                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtIDReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabel3)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtLibroPrestar)
                                    .addComponent(txtIDUser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCantidadLibro)
                                    .addComponent(cbxEstadoLibro, 0, 109, Short.MAX_VALUE))
                                .addGap(59, 59, 59)
                                .addComponent(btnRegistrarReserva))))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscadorUser, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addComponent(jLabel11)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15)
                                .addGap(18, 18, 18)
                                .addComponent(txtBuscadorLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFondoLayout.setVerticalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtIDReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCambiarEstadoSolicitud)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarSolicitud))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtBuscadorSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIDUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(cbxEstadoLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegistrarReserva))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLibroPrestar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtCantidadLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(txtBuscadorUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtBuscadorLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LogoBibliotecario.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSalidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSalidadMouseClicked
         RegresarLogion.RegresarLogin();// Regresamos al login
        this.dispose();// Cerramos la pantalla
    }//GEN-LAST:event_txtSalidadMouseClicked

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
       Direccionar.DireccionarRegistroLibro();
        this.dispose();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestamosActionPerformed
        Direccionar.DireccionarPrestamos();
        this.dispose();
    }//GEN-LAST:event_btnPrestamosActionPerformed

    private void btnDevolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolucionActionPerformed
       Direccionar.DireccionarDevolucion();
       this.dispose();
    }//GEN-LAST:event_btnDevolucionActionPerformed

    private void btnSolicitudesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitudesActionPerformed
         Direccionar.DireccionarSolicitudes();
        this.dispose();
    }//GEN-LAST:event_btnSolicitudesActionPerformed

    private void BtnPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPagosActionPerformed
        Direccionar.DireccionarPago();
        this.dispose();
    }//GEN-LAST:event_BtnPagosActionPerformed

    private void txtIDReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDReservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDReservaActionPerformed

    private void txtBuscadorSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscadorSolicitudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscadorSolicitudActionPerformed

    private void tblSolicitudesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSolicitudesMouseClicked
      int filasSeleccionada = tblSolicitudes.rowAtPoint(evt.getPoint()); //Evento para seleccionar la fila seleccionada
      // Por Medio cada columna trae los datos
      txtIDReserva.setText(tblSolicitudes.getValueAt(filasSeleccionada, 0).toString()); // Obtiene el nombre Persona 
      txtCantidadLibro.setText(tblSolicitudes.getValueAt(filasSeleccionada, 4).toString()); // Obtiene la cantidad libro
    }//GEN-LAST:event_tblSolicitudesMouseClicked

    private void btnCambiarEstadoSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarEstadoSolicitudActionPerformed
        ActualizarEstadoSolicitud();//Metodo para cambiar el estado de la solicitud
    }//GEN-LAST:event_btnCambiarEstadoSolicitudActionPerformed

    private void btnEliminarSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarSolicitudActionPerformed
       int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea eliminar la solicitud");
      if (JOptionPane.OK_OPTION == resp){
           EliminarEstadoSolicitud();
       MostrarDatos();
    }
    }//GEN-LAST:event_btnEliminarSolicitudActionPerformed

    private void txtBuscadorSolicitudKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorSolicitudKeyReleased
        BuscadorSolicitud(txtBuscadorSolicitud.getText());
    }//GEN-LAST:event_txtBuscadorSolicitudKeyReleased

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
      int filasSeleccionada = tblUsuarios.rowAtPoint(evt.getPoint()); //Evento para seleccionar la fila seleccionada  
       // Por medio cada columna trae los datos
    txtIDUser.setText(tblUsuarios.getValueAt(filasSeleccionada, 0).toString());
      
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void txtBuscadorUserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorUserKeyReleased
        buscarUser(txtBuscadorUser.getText());//Metodo que llamamos para la busqueda de un usuarios
    }//GEN-LAST:event_txtBuscadorUserKeyReleased

    private void txtBuscadorLibroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorLibroKeyReleased
        buscarLibro(txtBuscadorLibro.getText());
    }//GEN-LAST:event_txtBuscadorLibroKeyReleased

    private void tblLibroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLibroMouseClicked
        int filasSeleccionada = tblLibro.rowAtPoint(evt.getPoint()); //Evento para seleccionar la fila seleccionada
       // Por medio cada columna trae los datos
       txtLibroPrestar.setText(tblLibro.getValueAt(filasSeleccionada,0).toString());
    }//GEN-LAST:event_tblLibroMouseClicked

    private void btnRegistrarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarReservaActionPerformed
        if (txtIDUser.getText().length()==0) 
        {
           JOptionPane.showMessageDialog(null,"Seleccione en la tabla de usuarios para extraer el N춿 Registro"); 
        }else if(txtLibroPrestar.getText().length()==0)
        {
          JOptionPane.showMessageDialog(null,"Seleccione en la tabla de libro para extraer el N춿 Registro");   
        }else if(txtCantidadLibro.getText().length()==0) 
        {
           JOptionPane.showMessageDialog(null,"Seleccione en la tabla de solicitud para extraer la cantidad Solicitada");    
        }else
        {
           ActualizarInventario();
           MostrarDatosLibro();
        }
    }//GEN-LAST:event_btnRegistrarReservaActionPerformed

    ///Metodo para mostrar los datos de las solicitudes de los usarios
    
    public void MostrarDatos()
    {
        String [] titulos = {"N춿","Nombre","Libro","Estado","Cantidad Solicitado","Pedido"};
        String [] registros = new  String[6];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        String SQL ="select user.IDreserva,persona.Nombre,book.Titulo, Solicitud.nombreEst, user.Canitidad,user.FechaPedido from reserva as user inner join libro as book on user.IDlibro = book.IDlibro  LEFT JOIN estadosol Solicitud on user.IDestado = Solicitud.IDestado LEFT JOIN usuarios persona  on user.IDusuario = persona.IDusuario";
        
        try 
        {
            Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL); 
            // Reccoremos la tabla para traer dicha informaci칩n de cada empleado
            while(rs.next())
            {
                 registros[0] = rs.getString("IDreserva");
                 registros[1] = rs.getString("Nombre");
                 registros[2] = rs.getString("Titulo");
                 registros[3] = rs.getString("nombreEst");
                 registros[4] = rs.getString("Canitidad");
                 registros[5] = rs.getString("FechaPedido");
                 modelo.addRow(registros);
            }
            tblSolicitudes.setModel(modelo);
            
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
        }
        
    }
    
    //Metodo para llenar el combo box 
    
    public void llenarSolicitudCombox()
    {
        try 
        {
            String SQL = "select * from estadosol";
            Statement st= con.createStatement();
            ResultSet rs = st.executeQuery(SQL); 
            
             while(rs.next())
            {
               LlenarComboSolicitud cbxSol = new LlenarComboSolicitud();
               cbxSol.setIdsolicitud(rs.getInt("IDestado"));
               cbxSol.setNombreSolcitud(rs.getString("nombreEst"));
               cbxEstado.addItem(cbxSol.toString());
               
            }
            
        } catch (Exception e) 
        {
             JOptionPane.showMessageDialog(null,"Error: Al Cargar los ComboBox de Departamento"+e);
        }
    } // Fin del Metodo llenarSolcitud Combox
    
    public void ActualizarEstadoSolicitud()
    {
        if (txtIDReserva.getText().length()==0) // SI esta vacio 
        {
            JOptionPane.showMessageDialog(null,"Debes Seleccionar al usuario para cambiar el estados. Gracias");
            
        }
        else
        {
            try 
            {
              // Por medio de la consulta actualizamos el estado del usuario
             String SQL = "update reserva set IDestado=? where IDreserva = ?"; 
             int filasSeleccionada = tblSolicitudes.getSelectedRow();
              String dao = (String) tblSolicitudes.getValueAt(filasSeleccionada, 0); // Fila seleccionada actulizamos la tabla
               PreparedStatement pst=con.prepareStatement(SQL); // Preparamos la consulta
                 // Preparamos para insertar los datos correspondiente 
             pst.setInt(1,cbxEstado.getSelectedIndex());
              // Guardamos los datos 
             pst.setString(2,dao);
             pst.execute();
            JOptionPane.showMessageDialog(null, "Estado Solicitud CAMBIADO"); // Mostramos un mensjae que se guardar
            MostrarDatos(); // Recargamos la tabla
            txtIDReserva.setText("");
            
            } catch (Exception e) 
            {
               JOptionPane.showMessageDialog(null, "Error de Actualizar" +e );  
            }
        
        }
    }
    
    public void EliminarEstadoSolicitud()
    {
        String IDEstadoSoli = txtIDReserva.getText();
        if (txtIDReserva.getText().length()==0) // si la caja de texto esta vacio 
        {
           JOptionPane.showMessageDialog(null,"Debes Seleccionar al usuario para cambiar el estados. Gracias"); 
        }
        else{
        try 
        {
           String SQL = "delete from reserva where IDreserva = '"+IDEstadoSoli+"'";
           Statement st = con.createStatement();
            int n = st.executeUpdate(SQL); // Insertamos la consulta
            // Realiuza el cambio de la consulta
              if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Registros eliminado");
                txtIDReserva.setText(""); // Limpiamos la caja de texto                
            }
            
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
        }
        }// Fin del else
    }
    
    //Metodo para buscar la solicitud
    public void BuscadorSolicitud(String valor)
    {
        String [] titulos = {"N춿","Nombre","Libro","Estado","Cantidad Solicitado","Pedido"};
        String [] registros = new  String[6];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        String SQL ="select user.IDreserva,persona.Nombre,book.Titulo,Solicitud.nombreEst, user.Canitidad,user.FechaPedido from reserva as user inner join libro as book on user.IDlibro = book.IDlibro  LEFT JOIN estadosol Solicitud on user.IDestado = Solicitud.IDestado LEFT JOIN usuarios persona  on user.IDusuario = persona.IDusuario where Solicitud.nombreEst like '%"+valor+"%' or user.FechaPedido like '%"+valor+"%'";
        
        try 
        {
            Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL); 
            // Reccoremos la tabla para traer dicha informaci칩n de cada empleado
            while(rs.next())
            {
                 registros[0] = rs.getString("IDreserva");
                 registros[1] = rs.getString("Nombre");
                 registros[2] = rs.getString("Titulo");
                 registros[3] = rs.getString("nombreEst");
                 registros[4] = rs.getString("Canitidad");
                 registros[5] = rs.getString("FechaPedido");
                 modelo.addRow(registros);
            }
            tblSolicitudes.setModel(modelo);
            
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
        }
    }
    
    
     ////////////////////////////////////////////////////////////////////////////
    //////////         Mostrar datos a la tabla de contenido        ////////////
    ///////////////////////////////////////////////////////////////////////////
    public void MostrarDatosUser()
    {
        // Creamos la cabecera de la tabla.
        String[] titulos = {"N춿","Nombre","Carnet","Tel칠fono","Cargo","Estado","Correo"};
        String[] registros = new String[7];
        int Docente = 2;
        int Estudiante=3;
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        //Realizamos la consulta para mostrar los datos
        String SQL = "select user.IDusuario,user.Nombre,user.Carnet,user.Contrasena,user.Telefono,cargo.Nombre as 'Cargo',estado.Nombre as'Estado',user.Correo  from usuarios as user inner join servicio as estado on user.IDservicio = estado.IDservicio left join roles as cargo on user.IDroles = cargo.IDroles  where user.IDroles= 2 or user.IDroles= 3 ";
        
        try
        {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
             // Reccoremos la tabla para traer dicha informaci칩n de cada empleado
            while(rs.next())
            {
             registros[0] = rs.getString("IDusuario");
             registros[1] = rs.getString("Nombre");
             registros[2] = rs.getString("Carnet");
           
             registros[3] = rs.getString("Telefono");
             registros[4] = rs.getString("Cargo");
             registros[5] = rs.getString("Estado");
             registros[6] = rs.getString("Correo");
             modelo.addRow(registros);  
                
            }// Fin de while
            tblUsuarios.setModel(modelo);
            
        } 
        catch (Exception e) 
        {
             JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Verificar el usuario
        }
       
    
    } // Fin de Mostrar Datos
    
    
    //Metodo para buscar un usuario
    // Metodo para buscar a la persona 
    public void buscarUser(String valor)
    {
        // Creamos la cabecera de la tabla.
        String[] titulos = {"N춿","Nombre","Carnet","Tel칠fono","Cargo","Estado","Correo"};
        String[] registros = new String[7];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        //Realizamos la consulta para mostrar los datos
        
        
        String SQL ="select user.IDusuario,user.Nombre,user.Carnet,user.Contrasena,user.Telefono,cargo.Nombre as 'Cargo',estado.Nombre as'Estado',user.Correo  from usuarios as user inner join servicio as estado on user.IDservicio = estado.IDservicio left join roles as cargo on user.IDroles = cargo.IDroles where user.Nombre like '%"+valor+"%' or user.Carnet like '%"+valor+"%' or cargo.Nombre like '%"+valor+"%' ";
        
        try 
        {
            if(txtBuscadorUser.getText().length()==0)
            {
                MostrarDatosUser();
            }else{
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            
             while(rs.next())
            {
             registros[0] = rs.getString("IDusuario");
             registros[1] = rs.getString("Nombre");
             registros[2] = rs.getString("Carnet");
             registros[3] = rs.getString("Telefono");
             registros[4] = rs.getString("Cargo");
             registros[5] = rs.getString("Estado");
             registros[6] = rs.getString("Correo");
             modelo.addRow(registros);  
                
            }// Fin de while
             tblUsuarios.setModel(modelo);
            }
        } 
        catch (Exception e) 
        {
          JOptionPane.showMessageDialog(null, "Error al mostrar datos Busqueda" + e.getMessage());  
        }
        
    }// Fin del metodo de buscar 
    
    
     // Metodo para mostrar los datos de los libros
    public void MostrarDatosLibro()
    {
        String [] titulos = {"ID Libro","Codigo","Titulo","Categoria","Autor","Cantidad","Dias Prestamos"};
        String [] registros = new  String[7];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        String SQL ="SELECT * FROM libro;";
        
        try {
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL); 
            // Reccoremos la tabla para traer dicha informaci칩n de cada empleado
            while(rs.next())
            {
             registros[0] = rs.getString("IDlibro");
             registros[1] = rs.getString("Codigo");
             registros[2] = rs.getString("Titulo");
             registros[3] = rs.getString("Categoria");
             registros[4] = rs.getString("Autor");
             registros[5] = rs.getString("Cantidad");
             registros[6] = rs.getString("DiasPrestamos");
          
             modelo.addRow(registros);
            }
            tblLibro.setModel(modelo);
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
       
        }
        
        
        
    }
    
    
    
    
       //Metodo para el buscador
   
   public void buscarLibro(String valor)
   {
     
        String [] titulos = {"ID Libro","Codigo","Titulo","Categoria","Autor","Cantidad","Dias Prestamos"};
        String [] registros = new  String[7];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        String SQL ="SELECT * FROM libro where Titulo like '%"+valor+"%' or Categoria like '%"+valor+"%' or Codigo like '%"+valor+"%' ";
        
        try {
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL); 
            // Reccoremos la tabla para traer dicha informaci칩n de cada empleado
            while(rs.next())
            {
             registros[0] = rs.getString("IDlibro");
             registros[1] = rs.getString("Codigo");
             registros[2] = rs.getString("Titulo");
             registros[3] = rs.getString("Categoria");
             registros[4] = rs.getString("Autor");
             registros[5] = rs.getString("Cantidad");
             registros[6] = rs.getString("DiasPrestamos");
             modelo.addRow(registros);
            }
            tblLibro.setModel(modelo);
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
       
        }
       
   }
    
    
    public void ActualizarInventario()
    {
        String Cantidad = txtCantidadLibro.getText();
        String IDLibro = txtLibroPrestar.getText();
        try
        {
          String SQL = "UPDATE libro SET Cantidad = Cantidad - '"+Cantidad+"' WHERE IDlibro = '"+IDLibro+"'";   
           Statement st = con.createStatement();
           int n = st.executeUpdate(SQL); // Insertamos la consulta
           // Realiuza el cambio de la consulta
             
         
        if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Inventario Actualizado");
                RegistrarReserva();
            }
           
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
        }
      
    }
    
    
    public void RegistrarReserva()
    {
        try 
        {
            Calendar calendario = Calendar.getInstance();
            int hora, minutos, segundos;
            hora =calendario.get(Calendar.HOUR_OF_DAY);
            minutos = calendario.get(Calendar.MINUTE);
            segundos = calendario.get(Calendar.SECOND);
            String  HoraRegistro = hora + ":" + minutos + ":" + segundos;
            Calendar cal = Calendar.getInstance();// Instanciamos a la clase de calendario;
            int a침o = cal.get(Calendar.YEAR); // Extraemos el a침o
            int mes = cal.get(Calendar.MONTH); // extraemos el mes
            int dia = cal.get(Calendar.DAY_OF_MONTH); // Extraemos  el dia 
            String Fecha = dia + "-" + mes + "-" + a침o; // Concatenamos la fecha del resgristo acutal.
            
            String SQL = "insert into prestamo (IDusuario,IDlibro,FechaEntrega,EstadoLibro,Cantidad,Hora) values (?,?,?,?,?,?) "; 
            PreparedStatement pst=con.prepareStatement(SQL); // Prepara mos la consulta
            // Si todo esta correcto mandaremos la informaci칩n a cada columna
            pst.setString(1,txtIDUser.getText());
            pst.setString(2,txtLibroPrestar.getText());
            pst.setString(3,Fecha);
            pst.setString(4,(String)cbxEstadoLibro.getSelectedItem());
            pst.setString(5,txtCantidadLibro.getText());
            pst.setString(6,HoraRegistro);
            
            int n = pst.executeUpdate();
                        if(n > 0)
                        {
                        JOptionPane.showMessageDialog(null, "Registro con exito");
                        //Limpiamos las cajas de textos
                        txtIDUser.setText("");
                        txtLibroPrestar.setText("");
                        txtCantidadLibro.setText("");
                             
                        } // Fin del if
                        
                
            
        } 
        catch (Exception e) 
        {
           JOptionPane.showMessageDialog(null, "Error Verifique:  " + e);  //Especificamos el error 
        }
        
    }
    
    
    
    
    
    
   
    
    
    
    // Esto no se toca.
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormSolicitudes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormSolicitudes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPagos;
    private javax.swing.JButton btnCambiarEstadoSolicitud;
    private javax.swing.JButton btnDevolucion;
    private javax.swing.JButton btnEliminarSolicitud;
    private javax.swing.JButton btnPrestamos;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegistrarReserva;
    private javax.swing.JButton btnSolicitudes;
    private javax.swing.JComboBox<String> cbxEstado;
    private javax.swing.JComboBox<String> cbxEstadoLibro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel jpFondo;
    private javax.swing.JPanel jpMenu;
    private javax.swing.JTable tblLibro;
    private javax.swing.JTable tblSolicitudes;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtBuscadorLibro;
    private javax.swing.JTextField txtBuscadorSolicitud;
    private javax.swing.JTextField txtBuscadorUser;
    private javax.swing.JTextField txtCantidadLibro;
    private javax.swing.JTextField txtIDReserva;
    private javax.swing.JTextField txtIDUser;
    private javax.swing.JLabel txtIconoBibli;
    private javax.swing.JTextField txtLibroPrestar;
    private javax.swing.JLabel txtSalidad;
    // End of variables declaration//GEN-END:variables
}
