/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormulariosBibliotecario;
// Importamos el paquete de las herraminetas generales
import HerraminetasGenerales.*;
// Insetamos el paquete Clases bibliotecario para direccionar a los diferentes Form
import ClasesDeBibliotecario.*;
// Importa el paquete de la base de datos para ser utilizado en el proyecto
import ConexionBDD.*;
// Importacines que se trabajara en el proyecto de la bdd
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Daniel_Márquez
 */
public class FormDevolucion extends javax.swing.JFrame {

    // Creamos una instancia de la clases de herramientas generales
    HerraminetasGenerlasApp HerrApp = new HerraminetasGenerlasApp();
    // Instacia para regresar Login 
    ClassRegresoLogin RegresarLogion = new ClassRegresoLogin();
    // Instanciamos la clases dirigir Form 
    classDirgirFormBibli Direccionar = new  classDirgirFormBibli();
    
     // Conexión de la base de datos
     conexionSQL cc = new conexionSQL();
       Connection con=cc.conexion();
    
    /**
     * Creates new form FormDevolucion
     */
    public FormDevolucion() {
        initComponents();
        HerrApp.IconoBibli(txtIconoBibli);
        HerrApp.ColorMenu(jpMenu);
        HerrApp.ColorBotones(btnPrestamos, btnRegistrar, btnDevolucion);
        HerrApp.ColorBotones(btnSolicitudes,BtnPagos, BtnPagos);
        HerrApp.IconoSalida(txtSalidad);
        HerrApp.ColorFondo(jpFondo);
        //Mostramos los datos de las reservas que se han echo 
        MostrarDatosReserva();
        // Bloqueamos la caja de texto del IDReserva 
        txtIDReserva.setEnabled(false);
        txtCantidad.setVisible(false);
        txtNombreLibro.setVisible(false);
        //Mostramos los datos de los prestamos
        MostrarDatosPrestamos();
        txtIDPrestamo.setEnabled(false);
        txtIDUSER.setEnabled(false);
        txtNombreUSER.setEnabled(false);
        txtEstado.setVisible(false);
        txtNresevas.setVisible(false);
        txtCantidadesSolicitado.setVisible(false);
        txtLibroSolictado.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMenu = new javax.swing.JPanel();
        txtIconoBibli = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRegistrar = new javax.swing.JButton();
        btnPrestamos = new javax.swing.JButton();
        btnDevolucion = new javax.swing.JButton();
        BtnPagos = new javax.swing.JButton();
        btnSolicitudes = new javax.swing.JButton();
        txtSalidad = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jpFondo = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrestamos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtBuscadorPrestamos = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtIDPrestamo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnRenovar = new javax.swing.JButton();
        jdtEntrega = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblReservas = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        txtBuscadorReserva = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtIDReserva = new javax.swing.JTextField();
        btnElimarSolicitud = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        btnRegisrarReserva = new javax.swing.JButton();
        txtCantidad = new javax.swing.JTextField();
        txtNombreLibro = new javax.swing.JTextField();
        txtIDUSER = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNombreUSER = new javax.swing.JTextField();
        btnRegistrarMulta = new javax.swing.JButton();
        txtEstado = new javax.swing.JTextField();
        txtNresevas = new javax.swing.JTextField();
        txtCantidadesSolicitado = new javax.swing.JTextField();
        txtLibroSolictado = new javax.swing.JTextField();
        btnAaignarFecha = new javax.swing.JButton();
        btnElimarRegistro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtIconoBibli.setText("ICONO");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Verificar Devolución");

        btnRegistrar.setText("Registrar Libro");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnPrestamos.setText("Registro Prestamos");
        btnPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrestamosActionPerformed(evt);
            }
        });

        btnDevolucion.setText("Devolución Libro");
        btnDevolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolucionActionPerformed(evt);
            }
        });

        BtnPagos.setText("Registración Multa o Pago");
        BtnPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPagosActionPerformed(evt);
            }
        });

        btnSolicitudes.setText("Solicitudes Reservas");
        btnSolicitudes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolicitudesActionPerformed(evt);
            }
        });

        txtSalidad.setText("Salidad");
        txtSalidad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSalidadMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpMenuLayout = new javax.swing.GroupLayout(jpMenu);
        jpMenu.setLayout(jpMenuLayout);
        jpMenuLayout.setHorizontalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnPrestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDevolucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnSolicitudes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BtnPagos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(txtSalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(txtIconoBibli, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel2)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jpMenuLayout.setVerticalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(txtIconoBibli, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(btnRegistrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrestamos)
                .addGap(4, 4, 4)
                .addComponent(btnDevolucion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSolicitudes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BtnPagos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/LogoBibliotecario.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        tblPrestamos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPrestamos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPrestamosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPrestamos);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Registros De Devolución De Libros , Reservas y Actualizar Inventario libros ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Registros de prestamos");

        jLabel5.setText("Buscador:");

        txtBuscadorPrestamos.setSelectedTextColor(java.awt.Color.lightGray);
        txtBuscadorPrestamos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorPrestamosKeyReleased(evt);
            }
        });

        jLabel7.setText("IDprestamo:");

        txtIDPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDPrestamoActionPerformed(evt);
            }
        });

        jLabel8.setText("Fecha Devolución:");

        btnRenovar.setText("Ronovar");
        btnRenovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenovarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Aquí podras actualizar la renovación del libro.");

        btnEliminar.setText("Devolución");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Registro de reservas");

        tblReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblReservas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblReservasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblReservas);

        jLabel16.setText("Buscador:");

        txtBuscadorReserva.setSelectedTextColor(java.awt.Color.lightGray);
        txtBuscadorReserva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorReservaKeyReleased(evt);
            }
        });

        jLabel17.setText("N°Registro:");

        txtIDReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDReservaActionPerformed(evt);
            }
        });

        btnElimarSolicitud.setText("Borrar Solicitud");
        btnElimarSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimarSolicitudActionPerformed(evt);
            }
        });

        jLabel18.setText("Estado Libro:");

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Prestado", "Reservado" }));

        btnRegisrarReserva.setText("Registrar");
        btnRegisrarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisrarReservaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Registrar las Multas ");

        jLabel10.setText("N° Registro Usuario:");

        jLabel11.setText("Nombre De  Usuario:");

        btnRegistrarMulta.setText("Registrar Multa");
        btnRegistrarMulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarMultaActionPerformed(evt);
            }
        });

        btnAaignarFecha.setText("Asignar Fecha");
        btnAaignarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAaignarFechaActionPerformed(evt);
            }
        });

        btnElimarRegistro.setText("Eliminar Registro");
        btnElimarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnElimarRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpFondoLayout = new javax.swing.GroupLayout(jpFondo);
        jpFondo.setLayout(jpFondoLayout);
        jpFondoLayout.setHorizontalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3))
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscadorPrestamos, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 916, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(jpFondoLayout.createSequentialGroup()
                    .addGap(795, 795, 795)
                    .addComponent(txtNresevas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpFondoLayout.createSequentialGroup()
                    .addGap(95, 95, 95)
                    .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jpFondoLayout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16)
                            .addGap(18, 18, 18)
                            .addComponent(txtBuscadorReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(75, 75, 75)
                    .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jpFondoLayout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpFondoLayout.createSequentialGroup()
                            .addComponent(btnRegisrarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnElimarSolicitud))
                        .addGroup(jpFondoLayout.createSequentialGroup()
                            .addComponent(jLabel17)
                            .addGap(18, 18, 18)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpFondoLayout.createSequentialGroup()
                                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtNombreLibro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtIDReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(txtEstado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIDPrestamo)
                                    .addComponent(jdtEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(btnRenovar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAaignarFecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnElimarRegistro)))
                .addGap(72, 72, 72)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegistrarMulta)
                            .addComponent(txtNombreUSER, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFondoLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIDUSER, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(74, 74, 74)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCantidadesSolicitado, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLibroSolictado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jpFondoLayout.setVerticalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtBuscadorPrestamos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIDPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdtEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(21, 21, 21)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRenovar)
                            .addComponent(btnEliminar)
                            .addComponent(btnAaignarFecha)
                            .addComponent(btnElimarRegistro)))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIDUSER, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreUSER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(txtNresevas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(btnRegistrarMulta))
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCantidadesSolicitado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtLibroSolictado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreLibro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtIDReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegisrarReserva)
                            .addComponent(btnElimarSolicitud)))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtBuscadorReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 60, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtSalidadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSalidadMouseClicked
       RegresarLogion.RegresarLogin();// Regresamos al login
        this.dispose();// Cerramos la pantalla
    }//GEN-LAST:event_txtSalidadMouseClicked

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        Direccionar.DireccionarRegistroLibro();
        this.dispose();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrestamosActionPerformed
        Direccionar.DireccionarPrestamos();
        this.dispose();
    }//GEN-LAST:event_btnPrestamosActionPerformed

    private void btnDevolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolucionActionPerformed
       Direccionar.DireccionarDevolucion();
       this.dispose();
    }//GEN-LAST:event_btnDevolucionActionPerformed

    private void btnSolicitudesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolicitudesActionPerformed
        Direccionar.DireccionarSolicitudes();
        this.dispose();
    }//GEN-LAST:event_btnSolicitudesActionPerformed

    private void BtnPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPagosActionPerformed
        Direccionar.DireccionarPago();
        this.dispose();
    }//GEN-LAST:event_BtnPagosActionPerformed

    private void txtIDPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDPrestamoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDPrestamoActionPerformed

    private void btnRenovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenovarActionPerformed

       
      if(txtIDPrestamo.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null,"No has selecciona el registro de los prestamos");
        }else{
        
        
        
        String cantidades = txtNresevas.getText();
        int nCantidades = Integer.parseInt(cantidades);
        if(nCantidades >= 1)
        {
            JOptionPane.showMessageDialog(null, "Lo siento solo puede reserva una vez por usuario");
        }else if(jdtEntrega.getDate()==null)
        {
              JOptionPane.showMessageDialog(null,"No has ingresado la fecha");
        }
        else{
        
        
        
        
        if (txtIDPrestamo.getText().length()==0) 
           {
            JOptionPane.showMessageDialog(null,"Debes Seleccionar al usuario para cambiar la renovación. Gracias"); 
           }
           else
           {
              int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea cambiar la renovación");
      if (JOptionPane.OK_OPTION == resp){
          ActualizarRenovacion();
          
           
    }// Fin del if  
           } // Fin del else
        
        
        }  //Fin del ese verificar n cantidades
      }
    }//GEN-LAST:event_btnRenovarActionPerformed

    private void txtIDReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDReservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDReservaActionPerformed

    private void tblReservasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReservasMouseClicked
        int filasSeleccionada = tblReservas.rowAtPoint(evt.getPoint()); //Evento para seleccionar la fila seleccionada
          // Por medio cada columna trae los datos
        txtIDReserva.setText(tblReservas.getValueAt(filasSeleccionada,0).toString());
        txtCantidad.setText(tblReservas.getValueAt(filasSeleccionada,3).toString());
        txtNombreLibro.setText(tblReservas.getValueAt(filasSeleccionada,2).toString());
    }//GEN-LAST:event_tblReservasMouseClicked

    private void btnRegisrarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisrarReservaActionPerformed
       CambiarEstadoReserva();
    }//GEN-LAST:event_btnRegisrarReservaActionPerformed

    private void btnElimarSolicitudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimarSolicitudActionPerformed

        if (txtIDReserva.getText().length()==0) {
       JOptionPane.showMessageDialog(null,"Debes Seleccionar un registro de la tabla de reserva");   
        }else
        {
                 int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea actualizar el libro");
      if (JOptionPane.OK_OPTION == resp){
        ActualizarInventario();
      }
            
        }
      
    }//GEN-LAST:event_btnElimarSolicitudActionPerformed

    private void txtBuscadorReservaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorReservaKeyReleased
        BuscarReserva(txtBuscadorReserva.getText());
    }//GEN-LAST:event_txtBuscadorReservaKeyReleased

    private void tblPrestamosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPrestamosMouseClicked
       int filasSeleccionada = tblPrestamos.rowAtPoint(evt.getPoint()); //Evento para seleccionar la fila seleccionada
      // Por Medio cada columna trae los datos
      txtIDPrestamo.setText(tblPrestamos.getValueAt(filasSeleccionada, 0).toString()); // Obtiene el nombre Persona 
      txtIDUSER.setText(tblPrestamos.getValueAt(filasSeleccionada, 1).toString()); // Obtiene el nombre Persona 
      txtNombreUSER.setText(tblPrestamos.getValueAt(filasSeleccionada, 2).toString()); // Obtiene el nombre Persona 
      txtEstado.setText(tblPrestamos.getValueAt(filasSeleccionada, 9).toString()); // Obtiene el nombre Persona 
      txtNresevas.setText(tblPrestamos.getValueAt(filasSeleccionada, 11).toString()); // Obtiene el nombre Persona 
      txtLibroSolictado.setText(tblPrestamos.getValueAt(filasSeleccionada, 3).toString()); // Obtiene el nombre Persona 
      txtCantidadesSolicitado.setText(tblPrestamos.getValueAt(filasSeleccionada, 7).toString()); // Obtiene el nombre Persona 
    }//GEN-LAST:event_tblPrestamosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
      
        if(txtIDPrestamo.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null,"No has selecciona el registro de los prestamos");
        }
        else{
        int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea elimar el registro de prestamo");
      if (JOptionPane.OK_OPTION == resp){
          ActualizarInventario2();
          
       
      }
        
    } 
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegistrarMultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarMultaActionPerformed
      String vericar = txtEstado.getText();
        if (vericar.equals("Normal")) 
        {
         JOptionPane.showMessageDialog(null,"No puedes multar al usuario debido que no ha sobre pasado de la fecha.");
        }else{
        
        
        
      String Estado = txtIDPrestamo.getText();
      String SQL = "select Sancion from prestamo where IDprestamo = '"+Estado+"'"; 
      
        try 
        {
             Statement st = con.createStatement();
             ResultSet rs = st.executeQuery(SQL);
             if(rs.next())
             {
                 if(rs.getString("Sancion")== null) // si va null hace la registración
                 {
                      // Comienza el if
       if(txtIDUSER.getText().length()==0){
           JOptionPane.showMessageDialog(null,"Debes Seleccionar al usuario para registrar el usuario. Gracias");
       } 
       else
       {
      int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea registrar la multa");
      if (JOptionPane.OK_OPTION == resp){
          RegistrarMulta();
      }// Fin del if
       }// Fin del else
                 }else
                 {
                         switch(rs.getString("Sancion"))
                {
                      case "Sancionado":
                           JOptionPane.showMessageDialog(null,"El usuario ya fue registrado");
                          break;
                  
                }//Fin del switch
                 }//Fin del else
                 
                 
                 
              
                 
                 
             }// Fin del if rs.next
             else
             {
                 JOptionPane.showMessageDialog(null,"No se puede generar la consulta");
             }
            
        } catch (Exception e) 
        {
             JOptionPane.showMessageDialog(null,"Error" +e);
        }
      
      
      
      
       
        } // Fin de vericar
           
           
          
    }//GEN-LAST:event_btnRegistrarMultaActionPerformed

    private void txtBuscadorPrestamosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorPrestamosKeyReleased
        BuscarPrestamos(txtBuscadorPrestamos.getText());
    }//GEN-LAST:event_txtBuscadorPrestamosKeyReleased

    private void btnElimarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnElimarRegistroActionPerformed

          if(txtIDPrestamo.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null,"No has selecciona el registro de los prestamos");
        }else
          {
        
        int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea elimar el registro de prestamo");
      if (JOptionPane.OK_OPTION == resp){
        
             ElimarRegistroDePrestamos();
       
      }
        
      }
  
    }//GEN-LAST:event_btnElimarRegistroActionPerformed

    private void btnAaignarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAaignarFechaActionPerformed

        if(jdtEntrega.getDate()==null)
        {
              JOptionPane.showMessageDialog(null,"No has ingresado la fecha");
        }else{
        
      int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea asignar fecha");
      if (JOptionPane.OK_OPTION == resp){
       ActualizarFechaRenovacion();
          
           
    }// Fin del if  
        }
    }//GEN-LAST:event_btnAaignarFechaActionPerformed

    
    // Metodo para mostrar los datos en Jtable de las reserva 
    public void MostrarDatosReserva()
    {
        String [] titulos = {"N° Registro", "Nombre", "Libro","Cantidad" ,"Pedido", "Hora","Estado"};
        String [] registros = new  String[7];
        
         DefaultTableModel modelo = new DefaultTableModel(null,titulos);
         String SQL = "select pres.IDprestamo , user.Nombre , book.Titulo ,pres.Cantidad,Pres.FechaEntrega,pres.Hora ,pres.EstadoLibro from prestamo as pres inner join usuarios as user on pres.IDusuario = user.IDusuario left join libro as book on pres.IDlibro = book.IDlibro where pres.EstadoLibro = 'Reservado'";
        
         try
         {
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL);
           
            // Reccoremos la tabla para traer dicha información de cada empleado
            while (rs.next())
            {
             registros[0] = rs.getString("IDprestamo");
             registros[1] = rs.getString("Nombre");   
             registros[2] = rs.getString("Titulo");
             registros[3] = rs.getString("Cantidad");
             registros[4] = rs.getString("FechaEntrega");
             registros[5] = rs.getString("Hora");
             registros[6] = rs.getString("EstadoLibro");
             modelo.addRow(registros);                
            }
            tblReservas.setModel(modelo);  
         } catch(Exception e)
         {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
         }
    
    }
    
    public void CambiarEstadoReserva()
    {
        try 
        {
         
            if (txtIDReserva.getText().length()==0) 
            {
                JOptionPane.showMessageDialog(null,"Debes Seleccionar un registro de la tabla de reserva");
            }else 
            {
                 String SQL = "update prestamo set   EstadoLibro = ? , Hora = ? , renovaciones = ? where  IDprestamo = ?";
                 int filasSeleccionada = tblReservas.getSelectedRow();
           //Hora de registro
            Calendar calendario = Calendar.getInstance();
            int hora, minutos, segundos;
            hora =calendario.get(Calendar.HOUR_OF_DAY);
            minutos = calendario.get(Calendar.MINUTE);
            segundos = calendario.get(Calendar.SECOND);
            String  HoraRegistro = hora + ":" + minutos + ":" + segundos; // Extraemos la hora de registro
            
             String NumeroRenovacion="0";// Renovación
            
            //Comienza proceso a la entra de BDD
                 String dao = (String) tblReservas.getValueAt(filasSeleccionada, 0); // Fila seleccionada actulizamos la tabla
                 PreparedStatement pst=con.prepareStatement(SQL); // Preparamos la consulta 
                  // Preparamos para insertar los datos correspondiente 
                   pst.setString(1,(String)jcbEstado.getSelectedItem());
                   pst.setString(2,HoraRegistro);
                   pst.setString(3,NumeroRenovacion);
                   
            // Guardamos los datos 
             pst.setString(4,dao);
             pst.execute();
            JOptionPane.showMessageDialog(null, "Registros Actualizado"); // Mostramos un mensjae que se guardar
            MostrarDatosReserva();
            MostrarDatosPrestamos();
            txtIDReserva.setText("");
            }
            
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error de Actualizar" + e );
        }
    }// Fin del Metodo para actualizar el estado de reserva
    
    
     public void ActualizarInventario()
    {
        String Cantidad = txtCantidad.getText();
        String IDLibro = txtNombreLibro.getText();
        try
        {
          String SQL = "UPDATE libro SET Cantidad = Cantidad + '"+Cantidad+"' WHERE Titulo = '"+IDLibro+"'";   
           Statement st = con.createStatement();
           int n = st.executeUpdate(SQL); // Insertamos la consulta
           // Realiuza el cambio de la consulta
             
         
        if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Inventario Actualizado");
                ElimarRegistroDeReseva();
            }
           
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
        }
      
    }
     
     
     
     
     //Metodo para actualizar el inventario
     
     public void ActualizarInventario2()
    {
        String Cantidad = txtCantidadesSolicitado.getText();
        String IDLibro = txtLibroSolictado.getText();
        try
        {
          String SQL = "UPDATE libro SET Cantidad = Cantidad + '"+Cantidad+"' WHERE Titulo = '"+IDLibro+"'";   
           Statement st = con.createStatement();
           int n = st.executeUpdate(SQL); // Insertamos la consulta
           // Realiuza el cambio de la consulta
             
         
        if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Inventario Actualizado");
                ElimarRegistroDePrestamos();
            }
           
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
        }
      
    }
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     //Elimar registro de reserva
     public void ElimarRegistroDeReseva()
     {
         String IDPrestamo = txtIDReserva.getText();
        
         
             try 
             {
                  String SQL = "delete from prestamo where IDprestamo = '"+IDPrestamo+"'";
                   Statement st = con.createStatement();
            int n = st.executeUpdate(SQL); // Insertamos la consulta
            // Realiuza el cambio de la consulta
              if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Registros eliminado");
                txtIDReserva.setText(""); // Limpiamos la caja de texto
              MostrarDatosReserva();
              MostrarDatosPrestamos();
              
              
              
            }
                  
             } catch (Exception e) 
             {
                 JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
             }
         
     }
     // Elimar Registro de prestamos y dovolución de libro
     public void ElimarRegistroDePrestamos()
     {
         String IDPrestamo = txtIDPrestamo.getText();
        
         
             try 
             {
                  String SQL = "delete from prestamo where IDprestamo = '"+IDPrestamo+"'";
                   Statement st = con.createStatement();
            int n = st.executeUpdate(SQL); // Insertamos la consulta
            // Realiuza el cambio de la consulta
              if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Registros eliminado");
                txtIDReserva.setText(""); // Limpiamos la caja de texto
              MostrarDatosReserva();
              MostrarDatosPrestamos();
              
              
              
            }
                  
             } catch (Exception e) 
             {
                 JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
             }
         
     }
     
     
    
     //Metodo para buscar la reserva de usuario
      public void BuscarReserva(String valor)
    {  
      
         
        String [] titulos = {"N° Registro", "Nombre", "Libro","Cantidad" ,"Pedido", "Hora","Estado"};
        String [] registros = new  String[7];
        
         DefaultTableModel modelo = new DefaultTableModel(null,titulos);
         String SQL = "select pres.IDprestamo , user.Nombre , book.Titulo ,pres.Cantidad,Pres.FechaEntrega,pres.Hora ,pres.EstadoLibro from prestamo as pres inner join usuarios as user on pres.IDusuario = user.IDusuario left join libro as book on pres.IDlibro = book.IDlibro where pres.EstadoLibro = 'Reservado' and user.Nombre like '%"+valor+"%' ";
        
         try
         {
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL);
           
            // Reccoremos la tabla para traer dicha información de cada empleado
            while (rs.next())
            {
             registros[0] = rs.getString("IDprestamo");
             registros[1] = rs.getString("Nombre");   
             registros[2] = rs.getString("Titulo");
             registros[3] = rs.getString("Cantidad");
             registros[4] = rs.getString("FechaEntrega");
             registros[5] = rs.getString("Hora");
             registros[6] = rs.getString("EstadoLibro");
             modelo.addRow(registros);                
            }
            tblReservas.setModel(modelo);  
         } catch(Exception e)
         {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
         }
    
    }
    
    
    // Metodo para mostrar todos los datos de los prestamos de los libros
      
     // Metodo para mostrar los datos en Jtable de las reserva 
    public void MostrarDatosPrestamos()
    {
        String [] titulos = {"N°","N° Usuario", "Nombre", "Libro","Entrega" ,"Devolucion", "Libro", "Cantidad" , "Hora" ,"Sanción","Estado","N° Renovación"};
        String [] registros = new  String[12];
        
           //SACAR LA FECHA DEL SERVIDOR DE MI COMPUTADORA
            Calendar cal = Calendar.getInstance();// Instanciamos a la clase de calendario;
            int año = cal.get(Calendar.YEAR); // Extraemos el año
            int mes = cal.get(Calendar.MONTH); // extraemos el mes
            int dia = cal.get(Calendar.DAY_OF_MONTH); // Extraemos  el dia 
            String Fecha = dia + "-" + mes + "-" + año; // Concatenamos la fecha del resgristo acutal.
            
         DefaultTableModel modelo = new DefaultTableModel(null,titulos);
         String SQL = "select pres.IDprestamo ,user.IDusuario,user.Nombre , book.Titulo ,pres.FechaEntrega,pres.FechaDevolucion,pres.EstadoLibro,pres.Cantidad,pres.Hora , if(FechaDevolucion = '"+Fecha+"' ,'Multado','Normal') AS 'San' , pres.Sancion ,pres.renovaciones  from prestamo as pres inner join usuarios as user on pres.IDusuario = user.IDusuario left join libro as book on pres.IDlibro = book.IDlibro where pres.EstadoLibro = 'Prestado'";
        
         try
         {
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL);
               
             
               
               
           
            // Reccoremos la tabla para traer dicha información de cada empleado
            while (rs.next())
            {
             registros[0] = rs.getString("IDprestamo");
             registros[1] = rs.getString("IDusuario");
             registros[2] = rs.getString("Nombre");   
             registros[3] = rs.getString("Titulo");
             registros[4] = rs.getString("FechaEntrega");
             registros[5] = rs.getString("FechaDevolucion"); // Devolución del libro
             registros[6] = rs.getString("EstadoLibro");
             registros[7] = rs.getString("Cantidad");
             registros[8] = rs.getString("Hora");
             registros[9] = rs.getString("San");
             registros[10] = rs.getString("Sancion");
             registros[11] = rs.getString("renovaciones");
             
             
                
             
             modelo.addRow(registros);                
            }
            
            tblPrestamos.setModel(modelo);  
         } catch(Exception e)
         {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
         }
    
    }//Fin del metodo de prestamos
    
    
    //Metodo para actualizar la fecha de renovación
    public void ActualizarFechaRenovacion()
    {
        try 
        {
            // Por medio de la consulta actualizamos el estado del usuario
             String SQL = "update prestamo set FechaDevolucion=? where IDprestamo = ?";
             int filasSeleccionada = tblPrestamos.getSelectedRow();
             String dao = (String) tblPrestamos.getValueAt(filasSeleccionada, 0); // Fila seleccionada actulizamos la tabla
             PreparedStatement pst=con.prepareStatement(SQL); // Preparamos la consulta
            // Preparamos para insertar los datos correspondiente 
          int año = jdtEntrega.getCalendar().get(Calendar.YEAR);
          int mes = jdtEntrega.getCalendar().get(Calendar.MARCH);
          int dia = jdtEntrega.getCalendar().get(Calendar.DAY_OF_MONTH);
          String Entrega =  dia+"-"+mes+"-"+año;
          pst.setString(1,Entrega);
           // Guardamos los datos 
          pst.setString(2,dao);
          pst.execute();
          JOptionPane.showMessageDialog(null, "Ronovación Cambiado"); // Mostramos un mensjae que se guardar
          MostrarDatosPrestamos();
          txtIDPrestamo.setText("");
          txtIDUSER.setText("");
          txtNombreUSER.setText("");
   
          
            
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error de Actualizar" +e );  
        }
    }
    
    //Metodo para  eliminar un prestamo
    public void EliminarPrestamo()
    {
        String IDprestamo = txtIDPrestamo.getText();
        if(txtIDReserva.getText().length()==0)
        {
            JOptionPane.showMessageDialog(null,"Debes Seleccionar al usuario para  poder eliminar Gracias"); 
        }
        else
        {
            try {
                String SQL = "delete from prestamo where IDprestamo = '"+IDprestamo+"'";
            Statement st = con.createStatement();
            int n = st.executeUpdate(SQL); // Insertamos la consulta
            // Realiuza el cambio de la consulta
              if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Registros eliminado");
                txtIDPrestamo.setText("");
                  txtIDUSER.setText("");
                   txtNombreUSER.setText("");
                MostrarDatosPrestamos();// Recargamos la tabla
            }
            } catch (Exception e) 
            {
                JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
            }
            
        }// Fin del else
    }// Fin del metod de eliminar
    
    
    
    public void RegistrarMulta()
    {
        try 
        {
            Calendar cal = Calendar.getInstance();// Instanciamos a la clase de calendario;
            int año = cal.get(Calendar.YEAR); // Extraemos el año
            int mes = cal.get(Calendar.MONTH); // extraemos el mes
            int dia = cal.get(Calendar.DAY_OF_MONTH); // Extraemos  el dia 
            String Fecha = dia + "-" + mes + "-" + año; // Concatenamos la fecha del resgristo acutal.
            String Tipo = "Retraso";
            String Pago = "$2.00";
            String Estado ="No Pagado";
            
            String SQL = "insert into registromulta (IDusuario,Multa,Tipo,Fecha,Estado) values (?,?,?,?,?) "; 
            PreparedStatement pst=con.prepareStatement(SQL); // Prepara mos la consulta
            // Si todo esta correcto mandaremos la información a cada columna
            pst.setString(1,txtIDUSER.getText());
            pst.setString(2,Pago);
            pst.setString(3,Tipo);
            pst.setString(4,Fecha);
            pst.setString(5,Estado);
            
             int n = pst.executeUpdate();
                        if(n > 0)
                        {
                        JOptionPane.showMessageDialog(null, "Registro con exito");
                        //Limpiamos las cajas de textos
                        txtIDUSER.setText("");
                        txtNombreUSER.setText("");
                        txtIDPrestamo.setText("");
                         ActualizarRegistroMultaSanción();
         
                        
                             
                        } // Fin del if
            
        } catch (Exception e) 
        {
           JOptionPane.showMessageDialog(null, "Error Verifique:  " + e);  //Especificamos el error  
        }
    }
    
    public void ActualizarRegistroMultaSanción()
    { 
        try 
        {
            String SQL = "update prestamo set Sancion = ?  where IDprestamo = ?";
            int filasSeleccionada = tblPrestamos.getSelectedRow();
            String dao = (String) tblPrestamos.getValueAt(filasSeleccionada, 0); // Fila seleccionada actulizamos la tabla
            String Registro = "Sancionado";
            PreparedStatement pst=con.prepareStatement(SQL); // Preparamos la consulta
            // Preparamos para insertar los datos correspondiente 
            pst.setString(1,Registro);
             // Guardamos los datos 
             pst.setString(2,dao);
             pst.execute();
             MostrarDatosPrestamos();
          
             
        } catch (Exception e) 
        {
           JOptionPane.showMessageDialog(null, "Error de Actualizar" +e ); 
        }
    }
    
    
    //Incrementar la renovación de los libros.
    
    //Metodo para actualizar el inventario()
 
  public void ActualizarRenovacion()
    {
        String NRenovacion = "1";
        String IDPrestamo = txtIDPrestamo.getText();
        try
        {
          String SQL = "UPDATE prestamo SET renovaciones = renovaciones + 1 WHERE IDprestamo = '"+IDPrestamo+"'";   
           Statement st = con.createStatement();
           int n = st.executeUpdate(SQL); // Insertamos la consulta
           // Realiuza el cambio de la consulta
             
         
        if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Ha incrementado la N° Renovación del usuario");
                ActualizarFechaRenovacion();
            }
           
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
        }
      
    }
  
  
// Metodo para mostrar los datos en Jtable de las reserva 
    public void BuscarPrestamos(String valor)
    {
        String [] titulos = {"N°","N° Usuario", "Nombre", "Libro","Entrega" ,"Devolucion", "Libro", "Cantidad" , "Hora" ,"Sanción","Estado","N° Renovación"};
        String [] registros = new  String[12];
        
           //SACAR LA FECHA DEL SERVIDOR DE MI COMPUTADORA
            Calendar cal = Calendar.getInstance();// Instanciamos a la clase de calendario;
            int año = cal.get(Calendar.YEAR); // Extraemos el año
            int mes = cal.get(Calendar.MONTH); // extraemos el mes
            int dia = cal.get(Calendar.DAY_OF_MONTH); // Extraemos  el dia 
            String Fecha = dia + "-" + mes + "-" + año; // Concatenamos la fecha del resgristo acutal.
            
         DefaultTableModel modelo = new DefaultTableModel(null,titulos);
         String SQL = "select pres.IDprestamo ,user.IDusuario,user.Nombre , book.Titulo ,pres.FechaEntrega,pres.FechaDevolucion,pres.EstadoLibro,pres.Cantidad,pres.Hora , if(FechaDevolucion = '"+Fecha+"' ,'Multado','Normal') AS 'San' , pres.Sancion ,pres.renovaciones  from prestamo as pres inner join usuarios as user on pres.IDusuario = user.IDusuario left join libro as book on pres.IDlibro = book.IDlibro where user.Nombre like '%"+valor+"%' ";
         
         try
         {
             if(txtBuscadorPrestamos.getText().length()==0)
             {
                 MostrarDatosPrestamos();
             }else{
             
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL);
               
             
               
               
           
            // Reccoremos la tabla para traer dicha información de cada empleado
            while (rs.next())
            {
             registros[0] = rs.getString("IDprestamo");
             registros[1] = rs.getString("IDusuario");
             registros[2] = rs.getString("Nombre");   
             registros[3] = rs.getString("Titulo");
             registros[4] = rs.getString("FechaEntrega");
             registros[5] = rs.getString("FechaDevolucion"); // Devolución del libro
             registros[6] = rs.getString("EstadoLibro");
             registros[7] = rs.getString("Cantidad");
             registros[8] = rs.getString("Hora");
             registros[9] = rs.getString("San");
             registros[10] = rs.getString("Sancion");
             registros[11] = rs.getString("renovaciones");
             
             
                
             
             modelo.addRow(registros);                
            }
            
            tblPrestamos.setModel(modelo); 
             }// Fin de else
         } catch(Exception e)
         {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
         }
    
    }//Fin del metodo de prestamos
    
    
    public void BuscarReserva2(String valor)
    {
        String [] titulos = {"N° Registro", "Nombre", "Libro","Cantidad" ,"Pedido", "Hora","Estado"};
        String [] registros = new  String[7];
        
         DefaultTableModel modelo = new DefaultTableModel(null,titulos);
         String SQL = "select pres.IDprestamo , user.Nombre , book.Titulo ,pres.Cantidad,Pres.FechaEntrega,pres.Hora ,pres.EstadoLibro from prestamo as pres inner join usuarios as user on pres.IDusuario = user.IDusuario left join libro as book on pres.IDlibro = book.IDlibro where user.Nombre like '%"+valor+"%' ";
        
         try
         {
               Statement st = con.createStatement();
               ResultSet rs = st.executeQuery(SQL);
           
            // Reccoremos la tabla para traer dicha información de cada empleado
            while (rs.next())
            {
             registros[0] = rs.getString("IDprestamo");
             registros[1] = rs.getString("Nombre");   
             registros[2] = rs.getString("Titulo");
             registros[3] = rs.getString("Cantidad");
             registros[4] = rs.getString("FechaEntrega");
             registros[5] = rs.getString("Hora");
             registros[6] = rs.getString("EstadoLibro");
             modelo.addRow(registros);                
            }
            tblReservas.setModel(modelo);  
         } catch(Exception e)
         {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Muestrar el error al mostrar los datos 
         }
    
    }
    
    
    
    
    

  
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormDevolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormDevolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormDevolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormDevolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormDevolucion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnPagos;
    private javax.swing.JButton btnAaignarFecha;
    private javax.swing.JButton btnDevolucion;
    private javax.swing.JButton btnElimarRegistro;
    private javax.swing.JButton btnElimarSolicitud;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnPrestamos;
    private javax.swing.JButton btnRegisrarReserva;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnRegistrarMulta;
    private javax.swing.JButton btnRenovar;
    private javax.swing.JButton btnSolicitudes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> jcbEstado;
    private com.toedter.calendar.JDateChooser jdtEntrega;
    private javax.swing.JPanel jpFondo;
    private javax.swing.JPanel jpMenu;
    private javax.swing.JTable tblPrestamos;
    private javax.swing.JTable tblReservas;
    private javax.swing.JTextField txtBuscadorPrestamos;
    private javax.swing.JTextField txtBuscadorReserva;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCantidadesSolicitado;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtIDPrestamo;
    private javax.swing.JTextField txtIDReserva;
    private javax.swing.JTextField txtIDUSER;
    private javax.swing.JLabel txtIconoBibli;
    private javax.swing.JTextField txtLibroSolictado;
    private javax.swing.JTextField txtNombreLibro;
    private javax.swing.JTextField txtNombreUSER;
    private javax.swing.JTextField txtNresevas;
    private javax.swing.JLabel txtSalidad;
    // End of variables declaration//GEN-END:variables
}
