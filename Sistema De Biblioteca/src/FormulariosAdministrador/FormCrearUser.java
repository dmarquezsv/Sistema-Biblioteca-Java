/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FormulariosAdministrador;

import HerraminetasGenerales.*; // Importamos el paquete  de herramientas Generals para hacer cambio app
// Importamos el paqueta que va direccionar a los diferentes formularios
import ClasesDeAdministrador.*;
// Importa el paquete de la base de datos para ser utilizado en el proyecto
import ConexionBDD.*;
// Importamos el paquete para clases login par mostra el nombre de user
import ClasesLogin.*;

// Importamos otros paquetes que seran utilizado en la base de datos 
import java.awt.Image;
import java.sql.Connection;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.sql.*;
import java.util.Locale;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.regex.*;


/**
 *
 * @author Daniel_Márquez
 */
public class FormCrearUser extends javax.swing.JFrame {

    // Instanciamos a la clases  Herramientas Generales
    HerraminetasGenerlasApp HerrOpc = new HerraminetasGenerlasApp();
    // Instacia para regresar Login 
    ClassRegresoLogin RegresarLogion = new ClassRegresoLogin();
    // Instanciamos a la clases dirigir a los siguientes formumularios
    classDirigirForm Dirigir = new classDirigirForm();
    // instanciamos a la clases para  utilizar opciones generales del administrador
    HerraminetasAdmin OpcAdmin = new HerraminetasAdmin();
    // Instanciamos a la clases metodosLogin
    MetodosLogin user = new MetodosLogin();
    
     ResultSet llenarCombobox; // Llenar el combo box que sera utilizado abajo del codigo
    
    //Instanciamos la clases de la conexión de la base de datos
    conexionSQL cc = new conexionSQL();
    Connection con=cc.conexion();
    
    
    
    
    /**
     * Creates new form FormCrearUser
     */
    public FormCrearUser() {
        initComponents();
        // Agregamos los componentes
        HerrOpc.ColorBotones(btnCrearuser, btnVerLibros, btnReposicionLibro );
        HerrOpc.ColorMenu(jpMenu);
        HerrOpc.Icono(txtIconoAdmin);
        HerrOpc.IconoSalida(txtSalida);
        HerrOpc.ColorFondo(jpFondo);
        
        DesactivarTextBox(); // Mandamos a llamar para desactivar los textBox
        DescartivarBotones(); // Mandamos a llamara para desactivar los botones
        MostrarDatos();
        txtIDuser.setEnabled(false);
        LlenarCargoCombox();
        LlenarEstadoCombo();
        lblUsuario.setText(user.NombreUser);
        txtIDuser.setVisible(false);
     
      
       
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpMenu = new javax.swing.JPanel();
        txtIconoAdmin = new javax.swing.JLabel();
        btnCrearuser = new javax.swing.JButton();
        btnVerLibros = new javax.swing.JButton();
        btnReposicionLibro = new javax.swing.JButton();
        txtSalida = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblUsuario = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jpFondo = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnAgregarRegistro = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombreUser = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCarnet = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbxEstServicio = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbxCargo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtpassword = new javax.swing.JPasswordField();
        txtcorreo = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBorrarCampos = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        txtBuscador = new javax.swing.JTextField();
        txtIDuser = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtIconoAdmin.setText("ICONO");

        btnCrearuser.setText("Crear Usuarios");
        btnCrearuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearuserActionPerformed(evt);
            }
        });

        btnVerLibros.setText("Ver Registros Libro");
        btnVerLibros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerLibrosActionPerformed(evt);
            }
        });

        btnReposicionLibro.setText("Reposición de Libro");
        btnReposicionLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReposicionLibroActionPerformed(evt);
            }
        });

        txtSalida.setText("Salida");
        txtSalida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSalidaMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Bienvendio:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Crear Usuarios");

        lblUsuario.setBackground(new java.awt.Color(255, 255, 255));
        lblUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario.setText("jLabel5");

        javax.swing.GroupLayout jpMenuLayout = new javax.swing.GroupLayout(jpMenu);
        jpMenu.setLayout(jpMenuLayout);
        jpMenuLayout.setHorizontalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCrearuser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnVerLibros, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
            .addComponent(btnReposicionLibro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(txtIconoAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpMenuLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jpMenuLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblUsuario)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpMenuLayout.setVerticalGroup(
            jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMenuLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(txtIconoAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblUsuario))
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addComponent(btnCrearuser)
                .addGap(18, 18, 18)
                .addComponent(btnVerLibros)
                .addGap(18, 18, 18)
                .addComponent(btnReposicionLibro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/para pricipiantes.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Bienvenido: Aquí podras realizar el registros de los empleados la cual podras  tambien de actualizar, eliminar y buscar");

        btnAgregarRegistro.setText("Agregar un nuevo registro");
        btnAgregarRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarRegistroActionPerformed(evt);
            }
        });

        jLabel5.setText("Nombre de la persona:");

        jLabel6.setText("Carnet:");

        txtNombreUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreUserKeyTyped(evt);
            }
        });

        jLabel7.setText("Contraseña:");

        jLabel8.setText("Telefóno");

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        jLabel9.setText("Cargo:");

        jLabel10.setText("Estado Servicio");

        jLabel11.setText("Correo:");

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBorrarCampos.setText("Borra Campo");
        btnBorrarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarCamposActionPerformed(evt);
            }
        });

        jLabel12.setText("Registro de empleados");

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        jLabel13.setText("Buscador:");

        txtBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscadorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jpFondoLayout = new javax.swing.GroupLayout(jpFondo);
        jpFondo.setLayout(jpFondoLayout);
        jpFondoLayout.setHorizontalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFondoLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtNombreUser)
                                .addComponent(txtCarnet, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(57, 57, 57)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTelefono)
                                    .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFondoLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtIDuser)
                                    .addComponent(cbxEstServicio, 0, 135, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBorrarCampos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(145, 145, 145))))
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnAgregarRegistro)
                        .addComponent(jLabel4))
                    .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpFondoLayout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13)
                            .addGap(64, 64, 64)
                            .addComponent(txtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 673, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFondoLayout.setVerticalGroup(
            jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFondoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAgregarRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addComponent(btnRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarCampos))
                    .addGroup(jpFondoLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtNombreUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCarnet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jpFondoLayout.createSequentialGroup()
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(cbxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel10)
                                    .addComponent(cbxEstServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(txtcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtIDuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(98, 98, 98)
                .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addGroup(jpFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jpMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReposicionLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReposicionLibroActionPerformed
        Dirigir.DirigirResposicionLibro();
          this.dispose();// Cierra la ventana
    }//GEN-LAST:event_btnReposicionLibroActionPerformed

    //Los botones que sera dirigo a los diferentes formularios
    private void btnCrearuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearuserActionPerformed
       Dirigir.DirigirCrearUser();
       this.dispose();// Cierra la ventana
      
    }//GEN-LAST:event_btnCrearuserActionPerformed

    private void btnVerLibrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerLibrosActionPerformed
        Dirigir.DirigirVerInfoLibro();
       this.dispose();// Cierra la ventana
      
    }//GEN-LAST:event_btnVerLibrosActionPerformed

    private void txtSalidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSalidaMouseClicked
        RegresarLogion.RegresarLogin();// Regresamos al login
        this.dispose();// Cerramos la pantalla
    }//GEN-LAST:event_txtSalidaMouseClicked

    private void btnAgregarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarRegistroActionPerformed
        ActivarTextBox();
       // Cuando de clik habilitara los botones
        btnBorrarCampos.setEnabled(true);
        btnRegistrar.setEnabled(true); 
        OpcAdmin.LimpiartxtRegistroUser(txtCarnet, txtNombreUser, txtcorreo, txtpassword, txtTelefono);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        
        
    }//GEN-LAST:event_btnAgregarRegistroActionPerformed

    private void btnBorrarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarCamposActionPerformed
      OpcAdmin.LimpiartxtRegistroUser(txtCarnet, txtNombreUser, txtcorreo, txtpassword, txtTelefono);
    }//GEN-LAST:event_btnBorrarCamposActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
       InsertarRegistroUser();
       MostrarDatos();
       
     
       
    }//GEN-LAST:event_btnRegistrarActionPerformed

    // Evento para seleccionar la fila seleccionada y mostrar en los textbox
    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
    int filasSeleccionada = tblUsuarios.rowAtPoint(evt.getPoint()); //Evento para seleccionar la fila seleccionada
    
    // Por medio cada columna trae los datos
    txtIDuser.setText(tblUsuarios.getValueAt(filasSeleccionada, 0).toString());
    txtNombreUser.setText(tblUsuarios.getValueAt(filasSeleccionada, 1).toString());
    txtCarnet.setText(tblUsuarios.getValueAt(filasSeleccionada, 2).toString());
    txtpassword.setText(tblUsuarios.getValueAt(filasSeleccionada, 3).toString());
    txtTelefono.setText(tblUsuarios.getValueAt(filasSeleccionada, 4).toString());
    txtcorreo.setText(tblUsuarios.getValueAt(filasSeleccionada, 7).toString());
    cbxCargo.setSelectedItem(String.valueOf(tblUsuarios.getModel().getValueAt(filasSeleccionada,5)));
    cbxEstServicio.setSelectedItem(String.valueOf(tblUsuarios.getModel().getValueAt(filasSeleccionada,6)));
    ActivarTextBox();// Activamos las cajas de textos
        // Habilitamos o desactivamos los botones
        btnActualizar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnBorrarCampos.setEnabled(false);
        btnRegistrar.setEnabled(false);   
        
    }//GEN-LAST:event_tblUsuariosMouseClicked
  
    // Boton para eliminar el registro de la fila seleccionada
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

      int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea eliminar al usuario");
      if (JOptionPane.OK_OPTION == resp){
       EliminarRegistro();
       MostrarDatos();
    }
  
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
      
      int resp=JOptionPane.showConfirmDialog(null,"Seguro que desea actualizar al usuario");
      if (JOptionPane.OK_OPTION == resp){
       ActualizarDatos();
       MostrarDatos();
    }
        
        
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscadorKeyReleased
        buscar(txtBuscador.getText());// Metodo para buscar funciona por Nombre y Carnet
    }//GEN-LAST:event_txtBuscadorKeyReleased

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
       char validar = evt.getKeyChar();
       
       if(Character.isLetter(validar))
       {
           getToolkit().beep();
           evt.consume();
           
           JOptionPane.showMessageDialog(null, "Ingrese solo Numeros:");
       }
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtNombreUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUserKeyTyped
        char validar = evt.getKeyChar();
        if(Character.isDigit(validar))
        {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo Letras");
        }
        
        
    }//GEN-LAST:event_txtNombreUserKeyTyped

    
    
    
    
    /// Metdos para activar los textBox 
    public void ActivarTextBox()
    {
         // Cunado de clik al boton habilitarar los textbox
        txtCarnet.setEnabled(true);
        txtNombreUser.setEnabled(true);
        txtTelefono.setEnabled(true);
        txtcorreo.setEnabled(true);
        txtpassword.setEnabled(true);
        cbxCargo.setEnabled(true);
        cbxEstServicio.setEnabled(true);
    }
    
    // Metodos para desactivar los textBox
    public void DesactivarTextBox()
    {
       // Cunado inicial progrmama  Desactivamos los text box 
        txtCarnet.setEnabled(false);
        txtNombreUser.setEnabled(false);
        txtTelefono.setEnabled(false);
        txtcorreo.setEnabled(false);
        txtpassword.setEnabled(false);
        cbxCargo.setEnabled(false);
        cbxEstServicio.setEnabled(false);
    }
    
    // Metodos para desactivar los botones
    public void DescartivarBotones(){
          
        // Cuando inicial el programa desactivamos los botones
        btnActualizar.setEnabled(false);
        btnBorrarCampos.setEnabled(false);
        btnRegistrar.setEnabled(false);
        btnEliminar.setEnabled(false);
    
    }
    
    
    
    ////////////////////////////////////////////////////////////////////////////
    //////////            Insertar datos a la base de datos        ////////////
    ///////////////////////////////////////////////////////////////////////////
    
    public void InsertarRegistroUser()
    {
        
        try 
        {
            //Variable que almacenara para insertar datos a la BD
            String SQL = "insert into usuarios (Nombre,Carnet,Contrasena,Telefono,IDroles,IDservicio,Correo) values (?,?,?,?,?,?,?)";
            PreparedStatement pst=con.prepareStatement(SQL); // Prepara mos la consulta
            boolean status = OpcAdmin.validarEmail(txtcorreo.getText());
            boolean status2 = OpcAdmin.ValidarCarnet(txtCarnet.getText());
            boolean status3 = OpcAdmin.ValidarTelefono(txtTelefono.getText());
            // Verificamos si los campos están Vacios
            if (txtNombreUser.getText().length()==0)  // Verificas si esta vacios
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del nombre de persona");
            }
            else if (txtCarnet.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del carnet" );
            }
            else if(!status2)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado el formato del carnet: AZ0000");
            }
            else if(txtpassword.getText().length()== 0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto de la contraseña" );
            }
            else if(txtcorreo.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del correo" );    
            }
            else if(!status)
            {
                JOptionPane.showMessageDialog(null,"Correo no valido. Revise de nuevo");
            }
            else if(txtTelefono.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del telefono" );
            }
            else if(!status3)
            {
                JOptionPane.showMessageDialog(null,"Telefono no valido. Revise de nuevo formato 8 números Digitos");
            }
            else
            {
              // Si todo esta correcto mandaremos la información a cada columna
                        pst.setString(1, txtNombreUser.getText());
                        pst.setString(2, txtCarnet.getText());
                        pst.setString(3, txtpassword.getText());
                        pst.setString(4, txtTelefono.getText());                                    
                        pst.setInt(5, cbxCargo. getSelectedIndex());
                        pst.setInt(6, cbxEstServicio. getSelectedIndex());   
                        pst.setString(7, txtcorreo.getText()); 
                        
                        int n = pst.executeUpdate();
                        if(n > 0)
                        {
                             JOptionPane.showMessageDialog(null, "Registro con exito");
                            // Desacativamos los campos
                            DesactivarTextBox();
                            btnRegistrar.setEnabled(false);
                            btnBorrarCampos.setEnabled(false);
                           // Limpamos las cajas de textos
                           OpcAdmin.LimpiartxtRegistroUser(txtCarnet, txtNombreUser, txtcorreo, txtpassword, txtTelefono);            
                             
                        } // Fin del if
                        
                        
                
            } // Fin del else    
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error Verifique:  " + e);
        }
        
        
    }
    
    ////////////////////////////////////////////////////////////////////////////
    //////////         Mostrar datos a la tabla de contenido        ////////////
    ///////////////////////////////////////////////////////////////////////////
    public void MostrarDatos()
    {
        // Creamos la cabecera de la tabla.
        String[] titulos = {"N°","Nombre","Carnet","Contraseña","Teléfono","Cargo","Estado","Correo"};
        String[] registros = new String[8];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        //Realizamos la consulta para mostrar los datos
        String SQL = "select user.IDusuario,user.Nombre,user.Carnet,user.Contrasena,user.Telefono,cargo.Nombre as 'Cargo',estado.Nombre as'Estado',user.Correo  from usuarios as user inner join servicio as estado on user.IDservicio = estado.IDservicio left join roles as cargo on user.IDroles = cargo.IDroles";
        
        try
        {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
             // Reccoremos la tabla para traer dicha información de cada empleado
            while(rs.next())
            {
             registros[0] = rs.getString("IDusuario");
             registros[1] = rs.getString("Nombre");
             registros[2] = rs.getString("Carnet");
             registros[3] = rs.getString("Contrasena");
             registros[4] = rs.getString("Telefono");
             registros[5] = rs.getString("Cargo");
             registros[6] = rs.getString("Estado");
             registros[7] = rs.getString("Correo");
             modelo.addRow(registros);  
                
            }// Fin de while
            tblUsuarios.setModel(modelo);
            
        } 
        catch (Exception e) 
        {
             JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage()); // Verificar el usuario
        }
       
    
    } // Fin de Mostrar Datos
    
   // Metodo para eliminar un registro
    public void EliminarRegistro()
    {
        String IDpersona = txtIDuser.getText();
        try 
        {
           String SQL = "delete from usuarios where IDusuario = '"+IDpersona+"'"; // La consutla que eliminara el campo
         
           Statement st = con.createStatement();
            int n = st.executeUpdate(SQL); // Insertamos la consulta
            // Realiuza el cambio de la consulta
            if(n>=0)
            {
                JOptionPane.showMessageDialog(null,"Registros eliminado");
                OpcAdmin.LimpiartxtRegistroUser(txtCarnet, txtNombreUser, txtcorreo, txtpassword, txtTelefono);
                DesactivarTextBox();
                DescartivarBotones();
                txtIDuser.setText("");
               
                
            }
           
           
        } catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Error al eliminar Registros"+e.getMessage()); // Mostrar el error
        }
        
    } // Fin del metodo para elimiar el registro
    
    ////////////////////////////////////////////////////////////////////////////
    //////////         Actualizar Datos del usuario                 ////////////
    ///////////////////////////////////////////////////////////////////////////
    
    public void ActualizarDatos()
    {
         boolean status = OpcAdmin.validarEmail(txtcorreo.getText());
             
          // Verificamos si los campos están Vacios
            if (txtNombreUser.getText().length()==0)  // Verificas si esta vacios
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del nombre de persona");
            }
            else if (txtCarnet.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del carnet" );
            }
            else if(txtpassword.getText().length()== 0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto de la contraseña" );
            }
            else if(txtcorreo.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del correo" );    
            }
            else if(!status)
            {
                JOptionPane.showMessageDialog(null,"Correo no valido. Revise de nuevo");
            }
            else if(txtTelefono.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"No has ingresado ningun dato en la caja de texto del telefono" );
            }
            else
            { 
        
        try 
        {
            
            
                
         // Por medio de la conuslta actulizamos el emppleado la cual en where le indicamos que se actualizar por medio del id
            String SQL = "update usuarios set IDusuario=?,Nombre=?,Carnet=?,Contrasena=?, Telefono=?, IDroles=? , IDservicio = ? , Correo=? where IDusuario=? ";
            int filasSeleccionada = tblUsuarios.getSelectedRow();
            String dao = (String) tblUsuarios.getValueAt(filasSeleccionada, 0); // Fila seleccionada actulizamos la tabla
            PreparedStatement pst=con.prepareStatement(SQL); // Preparamos la consulta
     
         // Preparamos para insertar los datos correspondiente 
         pst.setString(1,txtIDuser.getText());
         pst.setString(2,txtNombreUser.getText());
         pst.setString(3,txtCarnet.getText());
         pst.setString(4,txtpassword.getText());
         pst.setString(5,txtTelefono.getText());          
         pst.setInt(6, cbxCargo.getSelectedIndex());
         pst.setInt(7, cbxEstServicio. getSelectedIndex());
         pst.setString(8,txtcorreo.getText());
         
        
         
         
         // Guardamos los datos 
          pst.setString(9,dao);
          pst.execute();
          JOptionPane.showMessageDialog(null, "Registros Actualizado"); // Mostramos un mensjae que se guardar
          DesactivarTextBox();
          DescartivarBotones();
           OpcAdmin.LimpiartxtRegistroUser(txtCarnet, txtNombreUser, txtcorreo, txtpassword, txtTelefono);            
           txtIDuser.setText("");
            
            
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Error de Actualizar" +e );
        }
       
        
            }// Fin del else
       
    
    }//Fin de actualizar datos
    
     ////////////////////////////////////////////////////////////////////////////
    //////////         buscar A LA PERSONA                          ////////////
    ///////////////////////////////////////////////////////////////////////////
    
    // Metodo para buscar a la persona 
    public void buscar(String valor)
    {
        // Creamos la cabecera de la tabla.
        String[] titulos = {"N°","Nombre","Carnet","Contraseña","Teléfono","Cargo","Estado","Correo"};
        String[] registros = new String[8];
        
        DefaultTableModel modelo = new DefaultTableModel(null,titulos);
        //Realizamos la consulta para mostrar los datos
        
        
        String SQL ="select user.IDusuario,user.Nombre,user.Carnet,user.Contrasena,user.Telefono,cargo.Nombre as 'Cargo',estado.Nombre as'Estado',user.Correo  from usuarios as user inner join servicio as estado on user.IDservicio = estado.IDservicio left join roles as cargo on user.IDroles = cargo.IDroles where user.Nombre like '%"+valor+"%' or user.Carnet like '%"+valor+"%' or cargo.Nombre like '%"+valor+"%' ";
        
        try 
        {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            
             while(rs.next())
            {
             registros[0] = rs.getString("IDusuario");
             registros[1] = rs.getString("Nombre");
             registros[2] = rs.getString("Carnet");
             registros[3] = rs.getString("Contrasena");
             registros[4] = rs.getString("Telefono");
             registros[5] = rs.getString("Cargo");
             registros[6] = rs.getString("Estado");
             registros[7] = rs.getString("Correo");
             modelo.addRow(registros);  
                
            }// Fin de while
             tblUsuarios.setModel(modelo);
            
        } 
        catch (Exception e) 
        {
          JOptionPane.showMessageDialog(null, "Error al mostrar datos Busqueda" + e.getMessage());  
        }
        
    }// Fin del metodo de buscar 
    
    
     ////////////////////////////////////////////////////////////////////////////
    //////////         LLenar Combox                                ////////////
    ///////////////////////////////////////////////////////////////////////////
    
    //Metodo para  llenar el Combo de cargo
    public void LlenarCargoCombox()
    {
        try 
        {
            String SQL = "select * from roles";
            Statement st= con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            
            while(rs.next())
            {
               LlenarComboCargo cbxRol = new LlenarComboCargo();
               cbxRol.setIdcargo(rs.getInt("IDroles"));
               cbxRol.setNombreCargo(rs.getString("Nombre"));
               cbxCargo.addItem(cbxRol.toString());
            }
            
        } catch (Exception e){
            JOptionPane.showMessageDialog(null,"Error: Al Cargar los ComboBox de Departamento"+e);
        }
    
    }
    // Metodo para llenar el combox de estado
    public void LlenarEstadoCombo()
    {
        try {
            String SQL = "select * from servicio";
            Statement st= con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            
            while(rs.next())
            {
                LlenarComboEstados cbxEstado = new LlenarComboEstados();
                cbxEstado.setIdestado(rs.getInt("IDServicio"));
                cbxEstado.setNombreEstado(rs.getString("Nombre"));
                cbxEstServicio.addItem(cbxEstado.toString());
            }
            
            
        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error: Al Cargar los ComboBox de estado "+e); 
        }
    }
    
  
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCrearUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCrearUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCrearUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCrearUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCrearUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregarRegistro;
    private javax.swing.JButton btnBorrarCampos;
    public javax.swing.JButton btnCrearuser;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrar;
    public javax.swing.JButton btnReposicionLibro;
    public javax.swing.JButton btnVerLibros;
    private javax.swing.JComboBox<String> cbxCargo;
    private javax.swing.JComboBox<String> cbxEstServicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JPanel jpFondo;
    private javax.swing.JPanel jpMenu;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtBuscador;
    private javax.swing.JTextField txtCarnet;
    private javax.swing.JTextField txtIDuser;
    private javax.swing.JLabel txtIconoAdmin;
    private javax.swing.JTextField txtNombreUser;
    public javax.swing.JLabel txtSalida;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtcorreo;
    private javax.swing.JPasswordField txtpassword;
    // End of variables declaration//GEN-END:variables
}
